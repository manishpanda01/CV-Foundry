async function availability(){const parts=[];if('Summarizer'in self)parts.push('Summarizer ok');if('LanguageModel'in self)parts.push('Prompt ok');document.title+=' — '+parts.join(' / ');}availability();
const jdEl=document.getElementById('jobText');chrome.storage.local.get(['lastJobText']).then(({lastJobText})=>{if(lastJobText)jdEl.value=lastJobText;});
document.getElementById('analyze').onclick=async()=>{if(!('Summarizer'in self))return alert('Summarizer not supported.');const a=await Summarizer.availability();if(a==='unavailable')return alert('Summarizer unavailable');const s=await Summarizer.create({type:'key-points',format:'markdown',length:'short'});const out=await s.summarize(jdEl.value,{context:'Extract required skills and responsibilities.'});document.getElementById('out').textContent=String(out);};
document.getElementById('tailor').onclick=async()=>{if(!('LanguageModel'in self))return alert('Prompt API not supported.');const session=await LanguageModel.create();const schema={type:'object',properties:{bullets:{type:'array',items:{type:'string'},maxItems:6},skills:{type:'array',items:{type:'string'},maxItems:12}},required:['bullets']};const prompt=`Create 4–6 ATS‑friendly STAR bullets for my CV based on this job description. Return JSON {bullets, skills}. JD:\n\n${jdEl.value}`;const res=await session.prompt(prompt,{responseConstraint:schema});document.getElementById('out').textContent=res;chrome.storage.local.set({lastTailored:res});};